apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  selector:
    matchLabels:
      app: mssql
  replicas: 1
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2017-latest
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "0.5"
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "Pwd12345!"
        volumeMounts:
        - name: mssql-persistent-storage
          mountPath: /var/opt/mssql
      volumes:
      - name: mssql-persistent-storage
        persistentVolumeClaim:
          claimName: mssql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
      nodePort: 30201
  type: NodePort

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2 
kind: Deployment 
metadata: 
  name: secondtestapi 
spec: 
  selector: 
    matchLabels: 
      app: secondtestapi 
  replicas: 1 # tells deployment to run 2 pods matching the template 
  template:
    metadata: 
      labels: 
        app: secondtestapi 
    spec: 
      containers: 
      - name: secondtestapi
        image: dockerkumart/secondtestapi:#{Build.BuildId}#
        ports: 
        - containerPort: 80 
--- 
# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service  
kind: Service 
apiVersion: v1 
metadata: 
  name: secondtestapi 
spec: 
  selector: 
    app: secondtestapi 
  ports: 
  - protocol: TCP 
    port: 80 
    targetPort: 80 
  type: LoadBalancer 